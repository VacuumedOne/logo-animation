{"version":3,"sources":["n-1.tsx","o-1.tsx","c.tsx","k.tsx","s.tsx","_.tsx","n-2.tsx","o-2.tsx","Anime.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["svg","className","viewBox","width","height","fill","d","stroke-width","Anime","id","React","Component","window","onload","console","log","outlines","document","querySelectorAll","i","length","el","setAttribute","String","anime","setDashoffset","timeline","loop","add","targets","strokeDashoffset","easing","duration","delay","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bdc8fdfa.chunk.js","sourcesContent":["import React from 'react';\n\nconst svg : React.FC = () => {\n  return (\n\n<svg className=\"path-box box-n-1\" viewBox=\"0 0 300 300\" width=\"300\" height=\"300\">\n\n{/* fill */}\n<g className=\"fill n-1\" fill=\"none\">\n<path d=\"M90 75V224.5M90 150C90 116.863 116.863 90 150 90C183.137 90 210 116.863 210 150V225\" stroke-width=\"29\"/>\n</g>\n\n{/* outline */}\n<g className=\"outline n-1\" fill=\"none\">\n<path d=\"M76 75.5H104C104.276 75.5 104.5 75.7239 104.5 76V87.9927C104.5 89.2352 105.913 89.9269 106.906 89.2214C119.071 80.5803 133.941 75.5 150 75.5C191.145 75.5 224.5 108.855 224.5 150V224C224.5 224.276 224.276 224.5 224 224.5H196C195.724 224.5 195.5 224.276 195.5 224V150C195.5 124.871 175.129 104.5 150 104.5C124.871 104.5 104.5 124.871 104.5 150V224C104.5 224.276 104.276 224.5 104 224.5H76C75.7239 224.5 75.5 224.276 75.5 224V76C75.5 75.7239 75.7239 75.5 76 75.5Z\"/>\n</g>\n\n</svg>\n  )\n}\n\nexport default svg;","import React from 'react';\n\nconst svg : React.FC = () => {\n  return (\n\n<svg className=\"path-box box-o-1\" viewBox=\"0 0 300 300\" width=\"300\" height=\"300\">\n\n{/* fill */}\n<g className=\"fill o-1\" fill=\"none\">\n<path d=\"M90 150C90 116.863 116.863 90 150 90C183.137 90 210 116.863 210 150C210 183.137 183.137 210 150 210C116.863 210 90 183.137 90 150Z\" stroke-width=\"30\"/>\n</g>\n\n{/* outline */}\n<g className=\"outline o-1\" fill=\"none\">\n<path d=\"M224.5 150C224.5 191.145 191.145 224.5 150 224.5C108.855 224.5 75.5 191.145 75.5 150C75.5 108.855 108.855 75.5 150 75.5C191.145 75.5 224.5 108.855 224.5 150ZM150 195.5C175.129 195.5 195.5 175.129 195.5 150C195.5 124.871 175.129 104.5 150 104.5C124.871 104.5 104.5 124.871 104.5 150C104.5 175.129 124.871 195.5 150 195.5Z\"/>\n</g>\n\n</svg>\n  )\n}\n\nexport default svg;","import React from 'react';\n\nconst svg : React.FC = () => {\n  return (\n\n<svg className=\"path-box box-c\" viewBox=\"0 0 300 300\" width=\"300\" height=\"300\">\n\n{/* fill */}\n<g className=\"fill c\" fill=\"none\">\n<path d=\"M191.845 107C181.036 96.4797 166.275 90 150 90C116.863 90 90 116.863 90 150C90 183.137 116.863 210 150 210C166.353 210 181.177 203.458 192 192.849\" stroke-width=\"30\"/>\n</g>\n\n{/* outline */}\n<g className=\"outline c\" fill=\"none\">\n<path d=\"M202.326 96.9714L181.819 117.478C164.024 100.062 135.479 100.179 117.828 117.83C100.059 135.599 100.059 164.408 117.828 182.177C135.479 199.827 164.024 199.945 181.819 182.528L202.326 203.035C173.205 231.776 126.298 231.659 97.3219 202.683C68.2278 173.589 68.2278 126.418 97.3219 97.3238C126.298 68.3477 173.205 68.2302 202.326 96.9714Z\"/>\n</g>\n\n</svg>\n  )\n}\n\nexport default svg;","import React from 'react';\n\nconst svg : React.FC = () => {\n  return (\n\n<svg className=\"path-box box-k\" viewBox=\"0 0 300 300\" width=\"300\" height=\"300\">\n\n{/* fill */}\n<g className=\"fill k\" fill=\"none\">\n<path d=\"M90 15 V225 C90 150.442 150.442 90 225 90C191.863 90 165 116.863 165 150C165 183.137 191.863 210 225 210\" stroke-width=\"29\"/>\n</g>\n\n{/* outline */}\n<g className=\"outline k\" fill=\"none\">\n<path d=\"M105.4 135.286C132.583 99.1047 175.8 75.6603 224.5 75.5008V104.503C199.601 104.771 179.5 125.038 179.5 150C179.5 174.962 199.601 195.229 224.5 195.497V224.498C183.585 224.229 150.5 190.978 150.5 150C150.5 142.761 151.532 135.764 153.457 129.148L153.877 127.707L152.677 128.609C123.547 150.5 104.66 185.291 104.501 224.5H75.5V15.5H104.5V134.985V136.483L105.4 135.286Z\"/>\n</g>\n\n</svg>\n  )\n}\n\nexport default svg;","import React from 'react';\n\nconst svg : React.FC = () => {\n  return (\n\n<svg className=\"path-box box-s\" viewBox=\"0 0 300 300\" width=\"300\" height=\"300\">\n\n{/* fill */}\n<g className=\"fill s\" fill=\"none\">\n<path d=\"M210 120C210 103.431 196.569 90 180 90H120C103.431 90 90 103.431 90 120C90 136.569 103.431 150 120 150H180C196.569 150 210 163.431 210 180C210 196.569 196.569 210 180 210H120C103.431 210 90 196.569 90 180\" stroke-width=\"29\"/>\n</g>\n\n{/* outline */}\n<g className=\"outline s\" fill=\"none\">\n<path d=\"M120 75.5H180C204.245 75.5 223.962 94.8894 224.489 119.008C224.495 119.275 224.277 119.5 224 119.5H196C195.732 119.5 195.487 119.277 195.466 118.967C194.934 110.888 188.213 104.5 180 104.5H120C111.44 104.5 104.5 111.44 104.5 120C104.5 128.56 111.44 135.5 120 135.5H180C204.577 135.5 224.5 155.423 224.5 180C224.5 204.577 204.577 224.5 180 224.5H120C95.7549 224.5 76.0384 205.111 75.5108 180.992C75.505 180.725 75.7231 180.5 76 180.5H104C104.268 180.5 104.514 180.723 104.534 181.033C105.066 189.112 111.787 195.5 120 195.5H180C188.56 195.5 195.5 188.56 195.5 180C195.5 171.44 188.56 164.5 180 164.5H120C95.4233 164.5 75.5 144.577 75.5 120C75.5 95.4233 95.4233 75.5 120 75.5Z\"/>\n</g>\n\n</svg>\n  )\n}\n\nexport default svg;","import React from 'react';\n\nconst svg : React.FC = () => {\n  return (\n\n<svg className=\"path-box box-_\" viewBox=\"0 0 300 300\" width=\"300\" height=\"300\">\n\n{/* fill */}\n<g className=\"fill _\" fill=\"none\">\n<path d=\"M75 210H224\" stroke-width=\"29\"/>\n</g>\n\n{/* outline */}\n<g className=\"outline _\" fill=\"none\">\n<path d=\"M75.5 196C75.5 195.724 75.7239 195.5 76 195.5H224C224.276 195.5 224.5 195.724 224.5 196V224C224.5 224.276 224.276 224.5 224 224.5H76C75.7239 224.5 75.5 224.276 75.5 224V196Z\"/>\n</g>\n\n</svg>\n  )\n}\n\nexport default svg;","import React from 'react';\n\nconst svg : React.FC = () => {\n  return (\n\n<svg className=\"path-box box-n-2\" viewBox=\"0 0 300 300\" width=\"300\" height=\"300\">\n\n{/* fill */}\n<g className=\"fill n-2\" fill=\"none\">\n<path d=\"M90 75V224.5M90 150C90 116.863 116.863 90 150 90C183.137 90 210 116.863 210 150V225\" stroke-width=\"29\"/>\n</g>\n\n{/* outline */}\n<g className=\"outline n-2\" fill=\"none\">\n<path d=\"M76 75.5H104C104.276 75.5 104.5 75.7239 104.5 76V87.9927C104.5 89.2352 105.913 89.9269 106.906 89.2214C119.071 80.5803 133.941 75.5 150 75.5C191.145 75.5 224.5 108.855 224.5 150V224C224.5 224.276 224.276 224.5 224 224.5H196C195.724 224.5 195.5 224.276 195.5 224V150C195.5 124.871 175.129 104.5 150 104.5C124.871 104.5 104.5 124.871 104.5 150V224C104.5 224.276 104.276 224.5 104 224.5H76C75.7239 224.5 75.5 224.276 75.5 224V76C75.5 75.7239 75.7239 75.5 76 75.5Z\"/>\n</g>\n\n</svg>\n  )\n}\n\nexport default svg;","import React from 'react';\n\nconst svg : React.FC = () => {\n  return (\n\n<svg className=\"path-box box-o-2\" viewBox=\"0 0 300 300\" width=\"300\" height=\"300\">\n\n{/* fill */}\n<g className=\"fill o-2\" fill=\"none\">\n<path d=\"M90 150C90 116.863 116.863 90 150 90C183.137 90 210 116.863 210 150C210 183.137 183.137 210 150 210C116.863 210 90 183.137 90 150Z\" stroke-width=\"30\"/>\n</g>\n\n{/* outline */}\n<g className=\"outline o-2\" fill=\"none\">\n<path d=\"M224.5 150C224.5 191.145 191.145 224.5 150 224.5C108.855 224.5 75.5 191.145 75.5 150C75.5 108.855 108.855 75.5 150 75.5C191.145 75.5 224.5 108.855 224.5 150ZM150 195.5C175.129 195.5 195.5 175.129 195.5 150C195.5 124.871 175.129 104.5 150 104.5C124.871 104.5 104.5 124.871 104.5 150C104.5 175.129 124.871 195.5 150 195.5Z\"/>\n</g>\n\n</svg>\n  )\n}\n\nexport default svg;","import React from 'react';\n\nimport './Anime.css';\n\nimport anime from 'animejs';\nimport N1 from './n-1';\nimport O1 from './o-1';\nimport C from './c';\nimport K from './k';\nimport S from './s';\nimport UnderBar from './_';\nimport N2 from './n-2';\nimport O2 from './o-2';\n\nclass Anime extends React.Component {\n  render() {\n    return (\n      <div>\n        <div id=\"wrap\">\n          {/* <div className=\"box group1\">\n          </div> */}\n          <div id=\"svg\" className=\"svg\">\n            <N1 />\n            <O1 />\n            <C />\n            <K />\n            <S />\n            <UnderBar />\n            <O2 />\n            <N2 />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst animation = () => {\n  console.log('anime start')\n\n  let outlines = document.querySelectorAll<SVGElement>('#svg .outline path');\n  for (let i = 0; i < outlines.length; i++) {\n    let el : SVGElement = outlines[i];\n    el.setAttribute('stroke-dashoffset', String(anime.setDashoffset(el)));\n  }\n\n  let timeline : anime.AnimeTimelineInstance = anime.timeline({\n    loop: true\n  });\n\n  timeline\n    .add({\n      targets: '#svg .fill path',\n      strokeDashoffset: [anime.setDashoffset, 0],\n      easing: 'easeInOutQuad',\n      duration: 500,\n      delay: (el, i) => {return i*250},\n    })\n    .add({\n      targets: '#svg .outline path',\n      strokeDashoffset: 0,\n      easing: 'easeInOutQuad',\n      duration: 1,\n    })\n    .add({\n      targets: '#svg .fill path',\n      strokeDashoffset: [0, anime.setDashoffset],\n      easing: 'easeInOutQuad',\n      duration: 500,\n      delay: (el, i) => {return i*250},\n    })\n    .add({\n      targets: '#svg .outline path',\n      strokeDashoffset: [0, anime.setDashoffset],\n      easing: 'easeInOutQuad',\n      duration: 500,\n      delay: (el, i) => {return i*250},\n    }, '-=500')\n}\n\nwindow.onload = animation;\n\nexport default Anime;","import React from 'react';\nimport './App.css';\n\nimport Anime from './Anime';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Anime />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}